@page "/productoverview"
@rendermode InteractiveServer
@layout MainLayout
@inject ShopContext Db
@inject NavigationManager Navigation

@using ECommerceShop.Configurations
@using ECommerceShop.Entities
@using Microsoft.EntityFrameworkCore
@using View.Components.Layout

<style>
    .card-img-top {
        width: 416px;
        height: 200px;
        object-fit: cover;
        object-position: center;
    }
</style>

<nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
    <div class="container-fluid">
        <a class="navbar-brand fw-bold" href="#">BulkBase</a>

        <div class="collapse navbar-collapse">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/productoverview">Home</a>
                </li>
            </ul>

            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link position-relative" href="/cart">
                        <img src="images/warenkorb.jpg" alt="Cart" style="height: 28px;" />
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<h1 class="text-center fw-bold fs-1 mb-5">Bulk Base</h1>
<div class="container">
    <!-- Hero Slider -->
    <div class="mb-5 position-relative bg-black text-white text-center p-5">
        <h2 class="display-4">Bulk Base</h2>
        <a class="btn btn-light mt-3" href="#">Shop Now →</a>
    </div>

    <!-- Produkte -->
    <section>
        <h2 class="fs-4 mb-3"><span style="color:#C30017;">▌</span> Our Products</h2>
        <h3 class="fs-2 fw-bold mb-4">Explore Our Products</h3>

        @if (products == null)
        {
        <p>Loading products...</p>
        }
        else
        {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in showAll ? products : products.Take(3))
            {
            <div class="col">
                <div class="card h-100">
                    <img src="@product.Image" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <p class="fw-bold">@product.Price.ToString("0.00") €</p>
                        <button class="btn text-white w-100" style="background-color:#C30017;"
                                @onclick="() => NavigateToProduct(product.ProductId)">View Product</button>
                    </div>
                </div>
            </div>
            }
        </div>
        }

        @if (!showAll)
        {
        <div class="text-center mt-4">
            <button class="btn btn-outline-dark px-5" @onclick="OnViewAllClicked">View All Products</button>
        </div>
        }
    </section>
</div>

<!-- Footer -->
<div class="row text-center mt-5 py-5 text-white" style="background-color: #000;">
    <div class="col-md-4">
        <i class="bi bi-truck fs-2"></i>
        <h5 class="mt-2">Free and Fast Delivery</h5>
        <p>Free delivery for all orders over 140€</p>
    </div>
    <div class="col-md-4">
        <i class="bi bi-headset fs-2"></i>
        <h5 class="mt-2">Customer Service</h5>
        <p>Customer service via email</p>
    </div>
    <div class="col-md-4">
        <i class="bi bi-arrow-counterclockwise fs-2"></i>
        <h5 class="mt-2">Money Back Guarantee</h5>
        <p>You can return items within 30 days</p>
    </div>
</div>

@code {
private List<Product>? products;
private bool showAll = false;

protected override async Task OnInitializedAsync()
{
products = await Db.Products.ToListAsync();
}

private async Task OnViewAllClicked()
{
showAll = true;
await Task.Yield();
}

private void NavigateToProduct(int productId)
{
Navigation.NavigateTo($"/product/{productId}");
}
}
